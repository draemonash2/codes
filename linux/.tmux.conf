# === 共通設定 ===
	run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"								# tmux バージョン取得
	set -g default-shell /bin/bash																# tmux起動時シェル変更
	set -g default-terminal "screen-256color"													# term 設定
	set -g base-index 1																			# ウィンドウ開始番号変更 (0 -> 1)
	setw -g pane-base-index 1																	# ペイン開始番号変更 (0 -> 1)
	set -g status-interval 10																	# 描画更新間隔(秒)
	set -g escape-time 0																		# Escの効きをよくする
	set -g mouse on																				# マウス操作有効化 (tmux 2.1以降)
	set -g terminal-overrides 'xterm*:smcup@:rmcup@'											# マウスホイールでヒストリではなくスクロールできるようにする
	set -g history-limit 10000																	# ウィンドウ履歴の最大行数(大きすぎるとメモリを大量消費するため注意!)
	set -g status on																			# ステータスバー表示
	set -g set-clipboard on																		# クリップボード共有
	setw -g mode-keys vi																		# コピーモードキー操作 vi化
#	set -g set-titles on																		# タイトル有効化
#	set -g set-titles-string "#T"																# タイトル表示形式
	setw -g xterm-keys on																		# xtermキーシーケンス使用可
	set -g @resurrect-save 'C-s'																# resurrect ホットキー 保存
	set -g @resurrect-restore 'C-r'																# resurrect ホットキー 復元
	set -g @resurrect-capture-pane-contents 'on'												# resurrect パネル内容保存
	set -g @resurrect-strategy-vim 'session'													# Vimのセッションを読み出す設定
	set -g @continuum-boot 'on'																	# continuum PC起動時自動tmux起動
	set -g @continuum-restore 'on'																# continuum 起動時自動復元
	set -g @continuum-save-interval '60'														# continuum 自動保存間隔(分)
	set -g focus-events on																		# フォーカスイベントON
	if-shell "uname | grep -q Darwin" "set -s copy-command 'pbcopy'" ""							# コピーコマンド設定(Mac用)
	set -ga update-environment " MYTERM_PRG"													# 環境変数引継ぎ

# === キーバインド（プレフィクス） ===
	unbind C-b ; set -g prefix C-Space ; bind C-Space send-prefix								# Prefix変更
	bind r source-file ~/.tmux.conf \; display "Reloaded!"										# 設定ファイルリロード
	bind p paste-buffer																			# ペースト
	bind B setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"	# グローバルキー送信 有効/無効トグル
	bind v copy-mode																			# コピーモード
	bind Space copy-mode																		# コピーモード
	bind Bspace select-pane -L																	# ペインフォーカス変更(左)
	bind C-h select-pane -L																		# ペインフォーカス変更(左)
	bind C-j select-pane -D																		# ペインフォーカス変更(下)
	bind C-k select-pane -U																		# ペインフォーカス変更(上)
	bind C-l select-pane -R																		# ペインフォーカス変更(左)
	bind h select-pane -L																		# ペインフォーカス変更(左)
	bind j select-pane -D																		# ペインフォーカス変更(下)
	bind k select-pane -U																		# ペインフォーカス変更(上)
	bind l select-pane -R																		# ペインフォーカス変更(左)
	bind | split-window -h -c '#{pane_current_path}'											# ペイン分割(垂直)
	bind \\ split-window -h -c '#{pane_current_path}'											# ペイン分割(垂直)
	bind - split-window -v -c '#{pane_current_path}'											# ペイン分割(水平)
	bind C-n next-window																		# ウィンドウフォーカス変更(次)
	bind C-p previous-window																	# ウィンドウフォーカス変更(前)
	bind Left swap-window -t -1 \; previous-window												# ウィンドウ移動(前)
	bind Right swap-window -t +1 \; next-window													# ウィンドウ移動(次)

# === キーバインド（コピーモード） ===
#	・xclip インストール手順
#		<コマンド>
#			sudo apt install xclip
#		<参考>
#			https://qiita.com/yuki-k/items/2a28b40f0bd49b2bcb21#vi-mode%E6%99%82%E3%81%AE%E8%A8%AD%E5%AE%9A
	bind -T copy-mode-vi v send -X begin-selection												# 選択開始
	bind -T copy-mode-vi V send -X select-line													# 行選択
	bind -T copy-mode-vi C-v send -X rectangle-toggle											# 矩形選択
	bind -T copy-mode-vi C-j send -X -N 5 scroll-down											# スクロールダウン
	bind -T copy-mode-vi C-k send -X -N 5 scroll-up												# スクロールアップ
	bind -T copy-mode-vi H send ^																# カーソル移動 行頭
	bind -T copy-mode-vi L send $																# カーソル移動 行末
	if-shell "uname | grep -q Linux" "bind -T copy-mode-vi y send -X copy-selection" ""												# ヤンク(Ubuntu-SSH接続時用)
	if-shell "uname | grep -q Linux" "bind -T copy-mode-vi c send -X copy-pipe-and-cancel \"xclip -i -sel clip > /dev/null\"" ""	# ヤンク(Ubuntu用)
	if-shell "uname | grep -q Darwin" "bind -T copy-mode-vi y send -X copy-selection" ""											# ヤンク(Mac-SSH接続時用)
	if-shell "uname | grep -q Darwin" "bind -T copy-mode-vi y send -X copy-pipe-and-cancel \"pbcopy\"" ""							# ヤンク(Mac用)

# === キーバインド（グローバル） ===
#	bind -T root C-, send C-b
#	bind -T root C-. send C-f
#	bind -n C-, send Left
#	bind -n C-. send Right
#	bind -T root C-S-, send M-b
#	bind -T root C-S-. send M-f
#	bind -T root C-M-, send C-a
#	bind -T root C-M-. send C-e
#	bind -T root C-S-h send C-w

# === 外観 ===
#  [色参考URL] https://blog.anderiens.com/entry/tmux-color-palette
#  [使用可能な色]
#    default(color set by status-style), colour0 ～ colour255,
#    black(colour0), red(colour1), green(colour2), yellow(colour3),
#    blue(colour4), magenta(colour5), cyan(colour6), white(colour7)
	set -g status-justify "centre"																# ウィンドウリスト中心寄せ
	set -g mode-style "fg=black,bg=yellow,bright"												# コピーモード
	set -g message-style "fg=black,bg=yellow,bright"											# コマンドライン
	set -g pane-border-style "fg=colour238,bg=colour238"										# ペイン枠線(全体)
	set -g pane-active-border-style "fg=green,bg=green"											# ペイン枠線(アクティブ)
	setw -g window-status-format "#[fg=default,bg=default,dim] #I: #W "							# ウィンドウリスト(全体)
	setw -g window-status-current-format "#[fg=colour255,bg=colour27,bright,bold] #I: #W "		# ウィンドウリスト(アクティブ)
	set -g status-style "fg=colour255,bg=colour238"												# ステータスバー(全体)
	set -g status-left-length 100																# ステータスバー(左) 最大長
	set -g status-left  "#[fg=colour113,bg=colour238]#{?client_prefix,#[reverse],} tmux #[default]#[\
						]#[default] #[\
						]#{?#{==:#{pane_mode},copy-mode},#[fg=colour238]#[bg=colour214] COPY ,#[fg=colour245]#[bg=colour238] NRML }#[\
						]#[default] #[\
						]#[fg=colour255,bg=colour201] Session: #S "								# ステータスバー(左) 形式
	set -g status-right-length 100																# ステータスバー(右) 最大長
	set -g status-right "#[fg=black,bg=cyan] #H #[\
						]#[fg=black,bg=colour123] %m/%d(%a) %H:%M #[\
						]#(~/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh)"			# ステータスバー(右) 形式

# === プラグイン設定 ===
#  [インストール方法]
#    1. tpm 取得 (初回のみ)
#         git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#    2. 追加したいプラグインを以下の設定に追記
#         e.g.) set -g @plugin 'tmux-plugins/tmux-sensible')
#    3. 設定ファイルをリロード＠TMUX外
#         tmux source ~/.tmux.conf
#    4. ~/.tmux.confを開き、「prefix -> shift + i」でプラグインインストール＠TMUX内
#  [参考URL] https://zenn.dev/nbtk/articles/df7f64e3550b07
	set -g @plugin 'tmux-plugins/tpm'															# Tmux Plugin Manager
	set -g @plugin 'tmux-plugins/tmux-sensible'													# 基本オプション設定(https://wonderwall.hatenablog.com/entry/2016/06/26/221721)
	set -g @plugin 'tmux-plugins/tmux-resurrect'												# セッション保存
	set -g @plugin 'tmux-plugins/tmux-continuum'												# セッション自動保存
	run '~/.tmux/plugins/tpm/tpm'																# Tmux Plugin Manager 初期化(tmux.confの末尾に書くこと！)
